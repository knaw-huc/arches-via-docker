# Edit this file and save as "dot.env" for use.

COMPOSE_PROJECT_NAME=arches_proj
DOMAINS=arches.globalise.dev.diginfra.net
DEPLOY_HOST=arches.globalise.dev.diginfra.net
NGINX_HTML_PATH=/var/www/html/arches.globalise.dev.diginfra.net
TZ=PST

#arches project and paths
ARCHES_PROJECT=arches_proj
ARCHES_ROOT=/arches_app
APP_ROOT=/arches_app/arches_proj
APP_COMP_FOLDER=/arches_app/arches_proj/arches_proj

#Arches configs
# NOTE: the ARCHES_NAMESPACE needs to look like a URL, ending in a '/',
# with the same port as used by the Arches Django APP.
ARCHES_NAMESPACE='http://arches:8000/'
# This will hopefully make the yarn build not fail.
NODE_OPTIONS='--max-old-space-size=1024'
INSTALL_DEFAULT_GRAPHS=True
INSTALL_DEFAULT_CONCEPTS=True
# Don't change these, because I can't figure out how dynamically pass
# a new database password to Postgres via docker compose. If you change
# something like the PGPASSWORD, be sure to change it in the corresponding
# value in the docker-compse.yml for the Postgres container.
PGUSERNAME=postgres
PGPASSWORD=postgis
PGDBNAME=arches_proj
PGHOST=arches_db
PGPORT=5432
ESHOST=arches_elasticsearch
ESPORT=9200
DJANGO_MODE=DEV
DJANGO_DEBUG=True
# Don't change the port, since it's pretty hard-coded.
DJANGO_PORT=8000
DOMAIN_NAMES=arches.globalise.dev.diginfra.net localhost 0.0.0.0 127.0.0.1
# NOTE: Only set BUILD_PRODUCTION=True if you have well over
# 8GB of system RAM. Otherwise, yarn will likely error out.
BUILD_PRODUCTION=False
PYTHONUNBUFFERED=0
ELASTICSEARCH_PREFIX=arches_proj

# The DATABASE_URL is a convenience consolidated way help connect to Postgresql
# pg_featureserv and tileserv
DATABASE_URL=postgresql://postgres:postgis@arches_db/arches_proj
