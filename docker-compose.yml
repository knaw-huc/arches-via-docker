version: "3.9"

services:

  arches_db:
    container_name: arches_db
    image: postgis/postgis:14-3.2
    env_file:
      - dot.env
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgis
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
    restart: always
    volumes:
        - postgres-data:/var/lib/postgresql/data/
        - postgres-log:/var/log/postgresql
        - ./init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
        - ../arches_data/:/arches_data
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_net

  arches_elasticsearch:
    container_name: arches_elasticsearch
    image: elasticsearch:8.5.3
    restart: always
    env_file:
      - dot.env
    environment:
      - TZ="PST"
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_net

  arches_redis:
    container_name: arches_redis
    image: "redis:6-alpine"
    restart: always
    volumes:
      - "redisdata:/data"
    command: "redis-server"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_net

  arches:
    container_name: arches
    image: arches
    env_file:
      - dot.env
    build:
      context: .
      dockerfile: arches/Dockerfile
      args:
        ARCHES_PROJECT: "arches_proj"
        ARCHES_ROOT: "/arches_app"
        APP_ROOT: "/arches_app/arches_proj"
        APP_COMP_FOLDER: "/arches_app/arches_proj/arches_proj"
    environment:
      - DEBUG=True
      - ARCHES_PROJECT=arches_proj
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    depends_on:
      - arches_db
      - arches_elasticsearch
      - arches_redis
    command:
      - run_arches
    volumes:
      - arches-log:/web_root/logs
      - arches-static:/static_root
      - arches-app:/arches_app
      - ../arches_data/:/arches_data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - arches_net

  nginx:
    container_name: nginx
    build: ./nginx
    image: arches_via_docker/nginx
    env_file:
      - dot.env
    volumes:
      - arches-static:/static_root
      - ./html:/var/www/html/arches.globalise.dev.diginfra.net
    restart: always
    depends_on:
      - arches
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arches.entrypoints=http"
      - "traefik.http.routers.arches.rule=Host(`arches.globalise.dev.diginfra.net`)"
      - "traefik.http.services.arches.loadbalancer.server.port=80"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - arches_net

networks:
  arches_net:
    driver: bridge
    name: arches_net
    external:
      name: traefik-public

volumes:
  redisdata:
  postgres-data:
  postgres-log:
  elasticsearch-data:
  arches-log:
  arches-static:
  arches-app:
